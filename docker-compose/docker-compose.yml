# Config
version: '2.29'

services:
  # nginx-proxy:
  #   image: jwilder/nginx-proxy
  #   container_name: proxy
  #   ports:
  #     - 80:80
  #     - 443:443
  #   volumes:
  #     - ./proxy/conf.d:/etc/nginx/conf.d
  #     - ./proxy/vhost.d:/etc/nginx/vhost.d
  #     - ./proxy/html:/usr/share/nginx/html
  #     - ./proxy/certs:/etc/nginx/certs:ro
  #     - /var/run/docker.sock:/tmp/docker.sock:ro
  #   networks:
  #     - proxy-tier
  #   restart: always

  # letsencrypt-companion:
  #   image: jrcs/letsencrypt-nginx-proxy-companion
  #   container_name: letsencrypt-companion
  #   volumes_from:
  #     - nginx-proxy
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - ./proxy/certs:/etc/nginx/certs:rw
  #   restart: always

  # nginx:
  #   image: nginx
  #   container_name: nextcloud_webserver
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #   links:
  #     - nextcloud
  #   volumes_from:
  #     - nextcloud
  #   environment:
  #     - VIRTUAL_HOST=srti-server.online
  #     - VIRTUAL_NETWORK=nginx-proxy
  #     - VIRTUAL_PORT=80
  #     - LETSENCRYPT_HOST=srti-server.online
  #     - LETSENCRYPT_EMAIL=srti.ph@proton.me
  #   networks:
  #     - proxy-tier
  #   restart: always

  #NextCloud
  nextcloud:
    image: nextcloud:apache
    container_name: nextcloud
    environment:
      - POSTGRES_HOST=
      - POSTGRES_PASSWORD=project
      - POSTGRES_DB=pgsql
      - POSTGRES_USER=dev
      - PHP_MEMORY_LIMIT=10G
      - PHP_UPLOAD_LIMIT=10G
    ports:
      - 80:80
    restart: always
    volumes:
      - ./nc_data:/var/www/html
    networks:
      - proxy

  # PostGreSql
  postgres:
    image: bitnami/postgresql:latest
    container_name: database_pgsql
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=dev
      - POSTGRES_PASSWORD=project
      - POSTGRES_DB=pgsql
    networks:
      - proxy
    volumes:
      - ./pgsql_data:/bitnami/postgresql
      - ./pgsql_data:/opt/bitnami/postgresql/conf
    
  #Ngrok
  # ngrok:
  #   image: ngrok/ngrok:latest
  #   container_name: ngrok
  #   restart: unless-stopped
  #   command:
  #     - "start"
  #     - "--all"
  #     - "/etc/ngrok.yml"
  #   volumes:
  #     - ./ngrok.yml:/etc/ngrok.yml
  #   ports:
  #     - 4040:4040
  #   networks:
  #     - proxy

volumes:
  pgsql_data:
  nc_data:

networks:
  proxy:
    external: true
    name: proxy
